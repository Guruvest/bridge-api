// Code generated by go-swagger; DO NOT EDIT.

package system_info

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// SystemInfoHandlerFunc turns a function with the right signature into a system info handler
type SystemInfoHandlerFunc func(SystemInfoParams) middleware.Responder

// Handle executing the request and returning a response
func (fn SystemInfoHandlerFunc) Handle(params SystemInfoParams) middleware.Responder {
	return fn(params)
}

// SystemInfoHandler interface for that can handle valid system info params
type SystemInfoHandler interface {
	Handle(SystemInfoParams) middleware.Responder
}

// NewSystemInfo creates a new http.Handler for the system info operation
func NewSystemInfo(ctx *middleware.Context, handler SystemInfoHandler) *SystemInfo {
	return &SystemInfo{Context: ctx, Handler: handler}
}

/*SystemInfo swagger:route GET /info System Info systemInfo

Get system information

*/
type SystemInfo struct {
	Context *middleware.Context
	Handler SystemInfoHandler
}

func (o *SystemInfo) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewSystemInfoParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
