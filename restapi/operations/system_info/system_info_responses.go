// Code generated by go-swagger; DO NOT EDIT.

package system_info

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/alien45/bridge-api/models"
)

// SystemInfoOKCode is the HTTP code returned for type SystemInfoOK
const SystemInfoOKCode int = 200

/*SystemInfoOK No error

swagger:response systemInfoOK
*/
type SystemInfoOK struct {

	/*
	  In: Body
	*/
	Payload *models.SystemInfo `json:"body,omitempty"`
}

// NewSystemInfoOK creates SystemInfoOK with default headers values
func NewSystemInfoOK() *SystemInfoOK {
	return &SystemInfoOK{}
}

// WithPayload adds the payload to the system info o k response
func (o *SystemInfoOK) WithPayload(payload *models.SystemInfo) *SystemInfoOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the system info o k response
func (o *SystemInfoOK) SetPayload(payload *models.SystemInfo) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *SystemInfoOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*SystemInfoDefault unexpected error

swagger:response systemInfoDefault
*/
type SystemInfoDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewSystemInfoDefault creates SystemInfoDefault with default headers values
func NewSystemInfoDefault(code int) *SystemInfoDefault {
	if code <= 0 {
		code = 500
	}

	return &SystemInfoDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the system info default response
func (o *SystemInfoDefault) WithStatusCode(code int) *SystemInfoDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the system info default response
func (o *SystemInfoDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the system info default response
func (o *SystemInfoDefault) WithPayload(payload *models.ErrorResponse) *SystemInfoDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the system info default response
func (o *SystemInfoDefault) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *SystemInfoDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
