// Code generated by go-swagger; DO NOT EDIT.

package market_access

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/alien45/bridge-api/models"
)

// GetTickerOKCode is the HTTP code returned for type GetTickerOK
const GetTickerOKCode int = 200

/*GetTickerOK successful operation

swagger:response getTickerOK
*/
type GetTickerOK struct {

	/*
	  In: Body
	*/
	Payload *models.Tick `json:"body,omitempty"`
}

// NewGetTickerOK creates GetTickerOK with default headers values
func NewGetTickerOK() *GetTickerOK {
	return &GetTickerOK{}
}

// WithPayload adds the payload to the get ticker o k response
func (o *GetTickerOK) WithPayload(payload *models.Tick) *GetTickerOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get ticker o k response
func (o *GetTickerOK) SetPayload(payload *models.Tick) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetTickerOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetTickerBadRequestCode is the HTTP code returned for type GetTickerBadRequest
const GetTickerBadRequestCode int = 400

/*GetTickerBadRequest Invalid Symbol supplied

swagger:response getTickerBadRequest
*/
type GetTickerBadRequest struct {
}

// NewGetTickerBadRequest creates GetTickerBadRequest with default headers values
func NewGetTickerBadRequest() *GetTickerBadRequest {
	return &GetTickerBadRequest{}
}

// WriteResponse to the client
func (o *GetTickerBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(400)
}

// GetTickerNotFoundCode is the HTTP code returned for type GetTickerNotFound
const GetTickerNotFoundCode int = 404

/*GetTickerNotFound Symbol not found

swagger:response getTickerNotFound
*/
type GetTickerNotFound struct {
}

// NewGetTickerNotFound creates GetTickerNotFound with default headers values
func NewGetTickerNotFound() *GetTickerNotFound {
	return &GetTickerNotFound{}
}

// WriteResponse to the client
func (o *GetTickerNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(404)
}

/*GetTickerDefault unexpected error

swagger:response getTickerDefault
*/
type GetTickerDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewGetTickerDefault creates GetTickerDefault with default headers values
func NewGetTickerDefault(code int) *GetTickerDefault {
	if code <= 0 {
		code = 500
	}

	return &GetTickerDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get ticker default response
func (o *GetTickerDefault) WithStatusCode(code int) *GetTickerDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get ticker default response
func (o *GetTickerDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the get ticker default response
func (o *GetTickerDefault) WithPayload(payload *models.ErrorResponse) *GetTickerDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get ticker default response
func (o *GetTickerDefault) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetTickerDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
