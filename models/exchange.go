// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// Exchange The trading venue, it could be either a Broker, an exchange or a financial institution with trading capabilities
// swagger:model Exchange
type Exchange struct {

	// The code of the exchange/broker
	Code string `json:"code,omitempty"`

	// The fee applied to each order
	Fee float32 `json:"fee,omitempty"`

	// Guruvest internal exchange/broker identifier
	ID int32 `json:"id,omitempty"`

	// The name of the exchange/broker
	Name string `json:"name,omitempty"`

	// Identify if the exchange has trading capabilities enabled or not
	Tradable bool `json:"tradable,omitempty"`

	// The URL of the exchange/broker
	URL string `json:"url,omitempty"`
}

// Validate validates this exchange
func (m *Exchange) Validate(formats strfmt.Registry) error {
	var res []error

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// MarshalBinary interface implementation
func (m *Exchange) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *Exchange) UnmarshalBinary(b []byte) error {
	var res Exchange
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
